name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Set environment variables at the job level
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NEXT_PUBLIC_WS_URL: ${{ secrets.NEXT_PUBLIC_WS_URL }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      WS_PORT: ${{ secrets.WS_PORT }}
      CI: true

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: |
            yarn.lock
            package.json
            server/package.json

      - name: Install dependencies
        run: yarn install

      - name: Run linter
        run: yarn lint

      - name: Build project
        run: |
          export NODE_ENV=production
          export NODE_OPTIONS="--max-old-space-size=8192"
          yarn build

      - name: Start servers for testing
        run: |
          nohup npx tsx server/websocket.ts > websocket.log 2>&1 &
          nohup next start > next.log 2>&1 &
          sleep 5 # Give servers time to start
